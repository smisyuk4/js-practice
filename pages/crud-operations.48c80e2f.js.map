{"mappings":"YAmBA,MAAMA,EAAO,CACTC,SAAUC,SAASC,cAAc,cACjCC,QAASF,SAASC,cAAc,qBAChCE,SAAUH,SAASC,cAAc,iBACjCG,SAAUJ,SAASC,cAAc,eAGrCH,EAAKC,SAASM,iBAAiB,SA2B/B,SAAwBC,GACpB,IAAIC,EAAS,KACI,IAAIC,SAASF,EAAMG,eAE3BC,SAAQ,CAACC,EAAOC,KACP,KAAVD,IACAJ,GAAU,EAAC,IAIJ,IAAXA,GACAT,EAAKI,QAAQW,gBAAgB,W,IApCrCf,EAAKC,SAASM,iBAAiB,UAI/B,SAAwBC,GACpBA,EAAMQ,iBAEN,IAAIC,EAAS,GACI,IAAIP,SAASF,EAAMG,eAE3BC,SAAQ,CAACC,EAAOC,KACR,WAATA,EACAI,EAASJ,GAAQD,GAEjBI,EAAS,IAAIA,EAAQJ,GACrBK,EAASJ,GAAQG,E,IAKzBE,QAAQC,IAAIF,GACZV,EAAMa,OAAOC,QACbtB,EAAKI,QAAQmB,aAAa,YAAY,E,IApB1C,MAAML,EAAW,GAgDjB,IAVsBM,EACXC,MAAM,6BAA8BD,GACtCE,MAAKC,IACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MAAM,IAMzBL,MAAKC,GACKA,IAEVD,MAAKM,IACFb,QAAQC,IAAIY,GAEZ,MAAMC,EAASD,EAAUE,KAAIC,GAYzC,SAA4BA,GACxB,MAAMC,GAACA,EAAEtB,KAAEA,EAAIuB,QAAEA,EAAOC,MAAEA,EAAKC,OAAEA,EAAMtB,OAAEA,GAAUkB,EAEnD,OAAKlB,EAUDA,EACO,0DACuBmB,iDACEtB,oDACGuB,kDACFC,mDACCC,mDACAtB,EAAOuB,KAAK,qCAPlD,EATW,0DACuBJ,iDACEtB,oDACGuB,kDACFC,mDACCC,2B,CApBnBE,CAAmBN,KAG9BnC,EAAKM,SAASoC,mBAAmB,YAAaT,EAAOO,KAAK,IAAI,IAEjEG,OAAMC,GAASzB,QAAQC,IAAIwB,I","sources":["src/js/crud-operations.js"],"sourcesContent":["//        сервер для практики запросов\n// https://github.com/typicode/json-server\n// npm install -g json-server\n\n//        запуск сервера\n// npm run server (потому что сделал скрипт запуска сервера)\n//        или базовая команда от пакета\n// json-server --watch db.json --port 3004\n\n//  http://localhost:3000/posts/1,\n\n// class formData\n//https://www.youtube.com/watch?v=iJq-NwbZL84\n\n// POST\n// GET\n// PUT и PATCH\n// DELETE\n\nconst refs = {\n    userForm: document.querySelector('.user-form'),\n    sendBtn: document.querySelector('.user-form button'),\n    sortBtns: document.querySelector('.sort-buttons'),\n    userBase: document.querySelector('.user-base'),\n}\n\nrefs.userForm.addEventListener('input', onInputChanges)\n\nrefs.userForm.addEventListener('submit', onClickSendBtn)\n\nconst userData = {}\n\nfunction onClickSendBtn(event) {\n    event.preventDefault();\n\n    let skills = []    \n    const formData = new FormData(event.currentTarget)\n\n    formData.forEach((value, name) => {\n        if (name !== 'skills') {\n            userData[name] = value\n        } else {\n            skills = [...skills, value]\n            userData[name] = skills\n        }        \n    })\n\n    //send userData to storage\n    console.log(userData)\n    event.target.reset()\n    refs.sendBtn.setAttribute('disabled', true)\n}\n\nfunction onInputChanges(event) {\n    let length = null\n    const formData = new FormData(event.currentTarget)\n\n    formData.forEach((value, name) => {\n        if (value !== '') {\n            length += 1\n        }\n    })\n\n    if (length === 4) {\n        refs.sendBtn.removeAttribute('disabled')\n    }\n}\n\nfunction fetchWriters(options) {\n    return fetch('http://localhost:3004/user', options)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n            return response.json()\n        })\n}\n\nfunction drawDb() {\n    fetchWriters()\n        .then(response => {\n            return response;\n        })\n        .then(resultArr => {\n            console.log(resultArr)\n\n            const markup = resultArr.map(autor => {\n                return markupCardOfWriter(autor)\n            })\n\n            refs.userBase.insertAdjacentHTML('beforeend', markup.join(''))\n        })\n        .catch(error => console.log(error))\n\n}\n\ndrawDb()\n\nfunction markupCardOfWriter(autor) {\n    const {id, name, surname, email, number, skills} = autor\n\n    if (!skills) {\n        return `<ul class=\"user\">\n                <li><span>Id:</span>${id}</li>\n                <li><span>Name:</span>${name}</li>\n                <li><span>Surname:</span>${surname}</li>\n                <li><span>Email:</span>${email}</li>\n                <li><span>Number:</span>${number}</li>\n            </ul>`\n    }\n\n    if (skills) {\n        return `<ul class=\"user\">\n                <li><span>Id:</span>${id}</li>\n                <li><span>Name:</span>${name}</li>\n                <li><span>Surname:</span>${surname}</li>\n                <li><span>Email:</span>${email}</li>\n                <li><span>Number:</span>${number}</li>\n                <li><span>Skills:</span>${skills.join(', ')}</li>\n            </ul>`\n    }    \n}"],"names":["$66ab854a65476ae2$var$refs","userForm","document","querySelector","sendBtn","sortBtns","userBase","addEventListener","event","length","FormData","currentTarget","forEach","value","name","removeAttribute","preventDefault","skills","$66ab854a65476ae2$var$userData","console","log","target","reset","setAttribute","options","fetch","then","response","ok","Error","status","json","resultArr","markup","map","autor","id","surname","email","number","join","$66ab854a65476ae2$var$markupCardOfWriter","insertAdjacentHTML","catch","error"],"version":3,"file":"crud-operations.48c80e2f.js.map"}