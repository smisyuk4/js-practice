{"mappings":"AACA,MAsBMA,EAAO,CACTC,KAAMC,SAAUC,cAAc,QAC9BC,gBAAiBF,SAASC,cAAc,sBAGtCE,EA3BS,CACX,CAAEC,IAAK,UAAWC,IAAK,oBACvB,CAAED,IAAK,UAAWC,IAAK,qBACvB,CAAED,IAAK,UAAWC,IAAK,qBACvB,CAAED,IAAK,UAAWC,IAAK,qBACvB,CAAED,IAAK,UAAWC,IAAK,oBACvB,CAAED,IAAK,UAAWC,IAAK,qBACvB,CAAED,IAAK,UAAWC,IAAK,oBACvB,CAAED,IAAK,UAAWC,IAAK,qBACvB,CAAED,IAAK,UAAWC,IAAK,qBACvB,CAAED,IAAK,UAAWC,IAAK,qBACvB,CAAED,IAAK,UAAWC,IAAK,oBACvB,CAAED,IAAK,UAAWC,IAAK,qBACvB,CAAED,IAAK,UAAWC,IAAK,qBACvB,CAAED,IAAK,UAAWC,IAAK,qBACvB,CAAED,IAAK,UAAWC,IAAK,sBACvB,CAAED,IAAK,UAAWC,IAAK,sBACvB,CAAED,IAAK,UAAWC,IAAK,sBACvB,CAAED,IAAK,UAAWC,IAAK,oBASAC,KAAKC,IAC5B,MAAMH,IAAEA,EAAGC,IAAEA,GAAQE,EAErB,MAAO,sCAAsCH,+BAAiCC,eACzED,mBACE,IAGXN,EAAKI,gBAAgBM,mBAAmB,aAAcL,EAAYM,KAAK,KAuBvEX,EAAKI,gBAAgBQ,iBAAiB,SArBZC,IACtB,GAA8B,QAA1BA,EAAMC,OAAOC,SACb,OAGJ,MAAMC,EAAgBd,SAASC,cAAc,UAExCU,EAAMC,OAAOG,UAAUC,SAAS,UACjCL,EAAMC,OAAOG,UAAUE,OAAO,SAG9BH,IACAA,EAAcC,UAAUG,OAAO,SAC/BpB,EAAKC,KAAKoB,MAAMC,gBAAkB,IAGtC,MAAMC,EAAerB,SAASC,cAAc,UAE5CH,EAAKC,KAAKoB,MAAMC,gBAAkBC,GAAcC,QAAQC,KAAK","sources":["src/js/colors.js"],"sourcesContent":["//https://htmlcolorcodes.com/\nconst colors = [\n    { hex: '#FF5733', RGB: 'rgb(255, 87, 51)' },\n    { hex: '#FFA533', RGB: 'rgb(255, 165, 51)' },\n    { hex: '#FFE633', RGB: 'rgb(255, 230, 51)' },\n    { hex: '#C1FF33', RGB: 'rgb(193, 255, 51)' },\n    { hex: '#4FFF33', RGB: 'rgb(79, 255, 51)' },    \n    { hex: '#33FFCE', RGB: 'rgb(51, 255, 206)' },   \n    { hex: '#5833FF', RGB: 'rgb(88, 51, 255)' },\n    { hex: '#33FF71', RGB: 'rgb(51, 255, 113)' },\n    { hex: '#FF33E9', RGB: 'rgb(255, 51, 233)' },\n    { hex: '#FF339F', RGB: 'rgb(255, 51, 159)' },\n    { hex: '#FF3333', RGB: 'rgb(255, 51, 51)' },\n    { hex: '#33BBFF', RGB: 'rgb(51, 187, 255)' },\n    { hex: '#A833FF', RGB: 'rgb(168, 51, 255)' },\n    { hex: '#3368FF', RGB: 'rgb(51, 104, 255)' },\n    { hex: '#A6FC79', RGB: 'rgb(166, 252, 121)' },\n    { hex: '#799EFC', RGB: 'rgb(121, 158, 252)' },\n    { hex: '#FC79E0', RGB: 'rgb(252, 121, 224)' },\n    { hex: '#428708', RGB: 'rgb(66, 135, 8)' },\n    \n]\n\nconst refs = {\n    body: document. querySelector('body'),\n    colorsContainer: document.querySelector('.colors-container'),\n}\n\nconst markupCards = colors.map((color) => {\n    const { hex, RGB } = color;\n\n    return `<div class='js-card' data-value = '${hex}' style='background-color: ${RGB}'>\n    <p>${hex}</p>\n    </div>`;\n})\n\nrefs.colorsContainer.insertAdjacentHTML('afterbegin', markupCards.join(''))\n\nconst onClickCheckCard = (event) => {\n    if (event.target.nodeName !== 'DIV') {\n        return;\n    }\n\n    const lastActiveBtn = document.querySelector('.check');\n    \n    if (!event.target.classList.contains('check')) {\n        event.target.classList.toggle('check');\n    }\n\n    if (lastActiveBtn) {\n        lastActiveBtn.classList.remove('check');        \n        refs.body.style.backgroundColor = '';   \n    }\n\n    const newActiveBtn = document.querySelector('.check');\n\n    refs.body.style.backgroundColor = newActiveBtn?.dataset.value;\n}\n\nrefs.colorsContainer.addEventListener('click', onClickCheckCard)"],"names":["$fc8ef3d7f3282ecb$var$refs","body","document","querySelector","colorsContainer","$fc8ef3d7f3282ecb$var$markupCards","hex","RGB","map","color","insertAdjacentHTML","join","addEventListener","event","target","nodeName","lastActiveBtn","classList","contains","toggle","remove","style","backgroundColor","newActiveBtn","dataset","value"],"version":3,"file":"colors.97d99ea8.js.map"}